/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as clientRouteImport } from './routes/(client)/route'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as clientIndexImport } from './routes/(client)/index'
import { Route as AdminTradeOffersImport } from './routes/admin/trade-offers'
import { Route as AdminModelsImport } from './routes/admin/models'
import { Route as AdminCompaniesImport } from './routes/admin/companies'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const clientRouteRoute = clientRouteImport.update({
  id: '/(client)',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const clientIndexRoute = clientIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => clientRouteRoute,
} as any)

const AdminTradeOffersRoute = AdminTradeOffersImport.update({
  id: '/trade-offers',
  path: '/trade-offers',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminModelsRoute = AdminModelsImport.update({
  id: '/models',
  path: '/models',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminCompaniesRoute = AdminCompaniesImport.update({
  id: '/companies',
  path: '/companies',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(client)': {
      id: '/(client)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof clientRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/companies': {
      id: '/admin/companies'
      path: '/companies'
      fullPath: '/admin/companies'
      preLoaderRoute: typeof AdminCompaniesImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/models': {
      id: '/admin/models'
      path: '/models'
      fullPath: '/admin/models'
      preLoaderRoute: typeof AdminModelsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/trade-offers': {
      id: '/admin/trade-offers'
      path: '/trade-offers'
      fullPath: '/admin/trade-offers'
      preLoaderRoute: typeof AdminTradeOffersImport
      parentRoute: typeof AdminRouteImport
    }
    '/(client)/': {
      id: '/(client)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof clientIndexImport
      parentRoute: typeof clientRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface clientRouteRouteChildren {
  clientIndexRoute: typeof clientIndexRoute
}

const clientRouteRouteChildren: clientRouteRouteChildren = {
  clientIndexRoute: clientIndexRoute,
}

const clientRouteRouteWithChildren = clientRouteRoute._addFileChildren(
  clientRouteRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminCompaniesRoute: typeof AdminCompaniesRoute
  AdminModelsRoute: typeof AdminModelsRoute
  AdminTradeOffersRoute: typeof AdminTradeOffersRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminCompaniesRoute: AdminCompaniesRoute,
  AdminModelsRoute: AdminModelsRoute,
  AdminTradeOffersRoute: AdminTradeOffersRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof clientIndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/companies': typeof AdminCompaniesRoute
  '/admin/models': typeof AdminModelsRoute
  '/admin/trade-offers': typeof AdminTradeOffersRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRoutesByTo {
  '/admin/companies': typeof AdminCompaniesRoute
  '/admin/models': typeof AdminModelsRoute
  '/admin/trade-offers': typeof AdminTradeOffersRoute
  '/': typeof clientIndexRoute
  '/admin': typeof AdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(client)': typeof clientRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/companies': typeof AdminCompaniesRoute
  '/admin/models': typeof AdminModelsRoute
  '/admin/trade-offers': typeof AdminTradeOffersRoute
  '/(client)/': typeof clientIndexRoute
  '/admin/': typeof AdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/companies'
    | '/admin/models'
    | '/admin/trade-offers'
    | '/admin/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin/companies'
    | '/admin/models'
    | '/admin/trade-offers'
    | '/'
    | '/admin'
  id:
    | '__root__'
    | '/(client)'
    | '/admin'
    | '/admin/companies'
    | '/admin/models'
    | '/admin/trade-offers'
    | '/(client)/'
    | '/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  clientRouteRoute: typeof clientRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  clientRouteRoute: clientRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(client)",
        "/admin"
      ]
    },
    "/(client)": {
      "filePath": "(client)/route.tsx",
      "children": [
        "/(client)/"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/companies",
        "/admin/models",
        "/admin/trade-offers",
        "/admin/"
      ]
    },
    "/admin/companies": {
      "filePath": "admin/companies.tsx",
      "parent": "/admin"
    },
    "/admin/models": {
      "filePath": "admin/models.tsx",
      "parent": "/admin"
    },
    "/admin/trade-offers": {
      "filePath": "admin/trade-offers.tsx",
      "parent": "/admin"
    },
    "/(client)/": {
      "filePath": "(client)/index.tsx",
      "parent": "/(client)"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
